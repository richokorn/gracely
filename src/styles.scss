@use "primeicons/primeicons.css";
@import "primeicons/primeicons.css";

@mixin generate-edged-step-utilities($prop-name, $class-prefix, $step, $max) {
  @for $i from 0 through $max {
    .#{$class-prefix}-#{$i} {
      #{$prop-name}: $i * $step;
    }
  }
}

@mixin generate-simple-step-utilities($prop-name, $class-prefix, $step, $max) {
  @for $i from 0 through $max {
    // X-axis (left and right)
    .#{$class-prefix}-x-#{$i} {
      #{$prop-name}-left: $i * $step;
      #{$prop-name}-right: $i * $step;
    }

    // Y-axis (top and bottom)
    .#{$class-prefix}-y-#{$i} {
      #{$prop-name}-top: $i * $step;
      #{$prop-name}-bottom: $i * $step;
    }
  }
}

// generate spacing utilities. Use via "class="m-2 p-x-3 gap-3" etc.
@include generate-simple-step-utilities(gap, gap, 0.25rem, 10);

@include generate-simple-step-utilities(margin, m, 0.25rem, 10);
@include generate-edged-step-utilities(margin, m, 0.25rem, 10);

@include generate-simple-step-utilities(padding, p, 0.25rem, 10);
@include generate-edged-step-utilities(padding, p, 0.25rem, 10);

.flex,
.row,
.flex-row {
  display: flex;
  flex-direction: row;
  align-items: baseline;

  &-reverse {
    flex-direction: row-reverse;
  }
}

.flex-column,
.column,
.col,
.flex-col {
  display: flex;
  flex-direction: column;

  &-reverse {
    flex-direction: column-reverse;
  }
}

.space {
  &-between {
    justify-content: space-between;
  }

  &-around {
    justify-content: space-around;
  }

  &-evenly {
    justify-content: space-evenly;
  }
}

.col-item-1 {
  width: calc(100% / 1);
}

.col-item-2 {
  width: calc(100% / 2);
}

.col-item-3 {
  width: calc(100% / 3);
}

.layout-container {
  background-color: var(--p-surface-50);
  color: var(--p-surface-950);
  min-height: 100vh;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.layout-grid {
  display: flex;
  flex-direction: column;
  flex: 1;
  max-width: 1400px;
  width: 100%;
  margin: 0 auto;
  gap: 1.5rem;
}

.layout-card {
  background-color: var(--p-surface-0);
  color: var(--p-surface-950);
  padding: 1.5rem;
  border-radius: 0.5rem;
  border: 1px solid var(--p-surface-200);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.p-dark .layout-card {
  background-color: var(--p-surface-900);
  color: var(--p-surface-0);
  border-color: var(--p-surface-700);
}

.topbar {
  background-color: var(--p-surface-0);
  padding: 1.5rem;
  border-radius: 1rem;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  border: 1px solid var(--p-surface-200);
  width: 100%;
}

.p-dark .topbar {
  background-color: var(--p-surface-900);
  border-color: var(--p-surface-700);
}

.topbar-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.topbar-brand {
  display: flex;
  gap: 0.75rem;
  align-items: center;
}

.topbar-brand-text {
  display: none;
}

@media (min-width: 640px) {
  .topbar-brand-text {
    display: flex;
    flex-direction: column;
  }
}

.topbar-title {
  font-size: 1.25rem;
  font-weight: 300;
  color: var(--p-surface-700);
  line-height: 1;
}

.p-dark .topbar-title {
  color: var(--p-surface-100);
}

.topbar-subtitle {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--p-primary-500);
  line-height: 1.25;
}

.p-dark .topbar-subtitle {
  color: var(--p-primary-400);
}

.topbar-actions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.topbar-theme-button {
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  transition: all 0.2s;
  color: var(--p-surface-900);
}

.p-dark .topbar-theme-button {
  color: var(--p-surface-0);
}

.topbar-theme-button:hover {
  background-color: var(--p-surface-100);
}

.p-dark .topbar-theme-button:hover {
  background-color: var(--p-surface-800);
}

.fill-primary {
  fill: var(--p-primary-500);
}

.p-dark .fill-primary {
  fill: var(--p-primary-400);
}

.fill-surface {
  fill: var(--p-surface-900);
}

.p-dark .fill-surface {
  fill: var(--p-surface-0);
}

.config-panel {
  position: absolute;
  top: 4rem;
  right: 0;
  width: 16rem;
  padding: 1rem;
  background-color: var(--p-surface-0);
  border-radius: 0.375rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
  0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid var(--p-surface-200);
  transform-origin: top;
  z-index: 50;
}

.p-dark .config-panel {
  background-color: var(--p-surface-900);
  border-color: var(--p-surface-700);
}

.config-section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.config-label {
  font-size: 0.875rem;
  color: var(--p-surface-600);
  font-weight: 600;
}

.p-dark .config-label {
  color: var(--p-surface-400);
}

.config-colors {
  padding-top: 0.5rem;
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: space-between;
}

.color-button {
  border: none;
  width: 1.25rem;
  height: 1.25rem;
  border-radius: 9999px;
  padding: 0;
  cursor: pointer;
}

.selected {
  --ring-offset-shadow: 0 0 0 var(--ring-offset-width) var(--ring-offset-color);
  --ring-shadow: 0 0 0 calc(var(--ring-width) + var(--ring-offset-width)) var(--ring-color);
  --ring-width: 2px;
  --ring-offset-width: 2px;
  --ring-color: var(--p-primary-500);
  --ring-offset-color: #ffffff;
  box-shadow: var(--ring-offset-shadow), var(--ring-shadow);
}

.hidden {
  display: none;
}
